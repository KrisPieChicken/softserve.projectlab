@page "/weather"  
@inject HttpClient Http  

<PageTitle>Weather</PageTitle>  

<h1>Weather</h1>  

<p>This component demonstrates fetching data from the server.</p>  

@if (forecasts == null)  
{  
   <p>  
       <em>Loading...</em>  
   </p>  
}  
else  
{  
   <MudTable Items="forecasts" Bordered="true" Striped="true">  
       <HeaderContent>  
           <MudTh>Date</MudTh>  
           <MudTh>Temp. (C)</MudTh>  
           <MudTh>Temp. (F)</MudTh>  
           <MudTh>Summary</MudTh>  
       </HeaderContent>  
       <RowTemplate>  
           <MudTd DataLabel="Date">@context.Date.ToShortDateString()</MudTd>  
           <MudTd DataLabel="Temp. (C)">@context.TemperatureC</MudTd>  
           <MudTd DataLabel="Temp. (F)">@context.TemperatureF</MudTd>  
           <MudTd DataLabel="Summary">@context.Summary</MudTd>  
       </RowTemplate>  
   </MudTable>  
}  

@code {  
   private WeatherForecast[]? forecasts;  

   protected override async Task OnInitializedAsync()  
   {  
       forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");  
   }  

   public class WeatherForecast  
   {  
       public DateOnly Date { get; set; }  

       public int TemperatureC { get; set; }  

       public string? Summary { get; set; }  

       public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);  
   }  
}